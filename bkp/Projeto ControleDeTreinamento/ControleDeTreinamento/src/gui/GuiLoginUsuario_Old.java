package gui;

import dao.DadosUsuario;
import java.util.ArrayList;
import java.util.List;
import model.Usuario;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import model.TipoUsuario;

public class GuiLoginUsuario_Old extends javax.swing.JDialog {

    /**
     * Creates new form GuiPrincipalUsuario
     */
    private Usuario usuario;
    private final DadosUsuario dadosLoginUsuario = new DadosUsuario();
    private boolean alterando = false;
    private static boolean aberto = false;

    public GuiLoginUsuario_Old(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    public static GuiLoginUsuario_Old getInstance() {
        if (aberto) return null;
        aberto = true;
        return new GuiLoginUsuario_Old(null, true);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        lblNome = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        lblSenha = new javax.swing.JLabel();
        btnGravar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        btnRemover = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblUsuarios = new javax.swing.JTable();
        txtSenha = new javax.swing.JPasswordField();
        btnVoltar = new javax.swing.JButton();
        btnAlterar = new javax.swing.JToggleButton();
        lblNome1 = new javax.swing.JLabel();
        cboTipoUsuario = new javax.swing.JComboBox();
        chbMostrarSenha = new javax.swing.JCheckBox();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Usuários");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        lblNome.setText("Usuário:");

        lblSenha.setText("Senha:");

        btnGravar.setText("Gravar");
        btnGravar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGravarActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Cadastro de Usuários");

        btnRemover.setText("Remover");
        btnRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverActionPerformed(evt);
            }
        });

        tblUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nome", "Senha", "Tipo", "Criação"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblUsuarios);
        if (tblUsuarios.getColumnModel().getColumnCount() > 0) {
            tblUsuarios.getColumnModel().getColumn(0).setResizable(false);
            tblUsuarios.getColumnModel().getColumn(1).setResizable(false);
            tblUsuarios.getColumnModel().getColumn(2).setResizable(false);
            tblUsuarios.getColumnModel().getColumn(3).setResizable(false);
        }

        btnVoltar.setText("Voltar");
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        btnAlterar.setText("Alterar");
        btnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });

        lblNome1.setText("Tipo:");

        chbMostrarSenha.setText("Mostrar Senha");
        chbMostrarSenha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chbMostrarSenhaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblNome1)
                        .addGap(132, 132, 132)
                        .addComponent(lblNome)
                        .addGap(120, 120, 120)
                        .addComponent(lblSenha))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRemover))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(btnVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chbMostrarSenha)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(cboTipoUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addComponent(btnGravar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNome1)
                    .addComponent(lblNome)
                    .addComponent(lblSenha))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cboTipoUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(txtSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(chbMostrarSenha)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnGravar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRemover)
                    .addComponent(btnVoltar)
                    .addComponent(btnAlterar))
                .addGap(30, 30, 30))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        this.setLocationRelativeTo(null);
        cboTipoUsuario.removeAllItems();
        
        for (int i=0; i<TipoUsuario.values().length; i++) {
            cboTipoUsuario.addItem(TipoUsuario.values()[i]);
        }
        
        preencherTabela();
    }//GEN-LAST:event_formWindowOpened

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnVoltarActionPerformed

    private void btnRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverActionPerformed

        int opcao
        = JOptionPane.showOptionDialog(null,
            "Confirma a exclusão?",
            "Pergunta",
            JOptionPane.YES_NO_OPTION,
            JOptionPane.QUESTION_MESSAGE, null,
            new String[]{"Sim", "Não"}, "Sim");
        if (opcao == 0) {
            this.usuario = (Usuario) tblUsuarios.getValueAt(tblUsuarios.getSelectedRow(), 0);
            try {
                dadosLoginUsuario.remover(this.usuario);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
            JOptionPane.showMessageDialog(rootPane, "Usuário Removido.");
            preencherTabela();

        }

    }//GEN-LAST:event_btnRemoverActionPerformed

    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarActionPerformed
        // TODO add your handling code here:
        if (alterando) preencherTabela();
        else {
            try {
                usuario = (Usuario) tblUsuarios.getValueAt(tblUsuarios.getSelectedRow(), 0);
                // cboTipoUsuario.setSelectedItem(usuario.getTipo());
                txtNome.setText(usuario.getNome());
                txtSenha.setText(usuario.getSenha());
                txtNome.requestFocus();
                txtNome.selectAll();
                alterando = true;
                btnAlterar.setText("Alterando");
                tblUsuarios.setEnabled(false);
            } catch (Exception headlessException) {
                JOptionPane.showMessageDialog(null, "Selecione um Usuário.");
                btnAlterar.setSelected(false);
            }
        }
    }//GEN-LAST:event_btnAlterarActionPerformed

    private void btnGravarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGravarActionPerformed
        // TODO add your handling code here:
        if (validaCampos()) {
            if(!alterando) {
                String nome = txtNome.getText().toUpperCase();
                String senha = txtSenha.getText();
                TipoUsuario tipoUsuario = (TipoUsuario) cboTipoUsuario.getSelectedItem();
                // usuario = new Usuario(nome, senha, tipoUsuario);

                try {
                    dadosLoginUsuario.incluir(usuario);
                    JOptionPane.showMessageDialog(rootPane, "Usuário incluído.");
                } catch (Exception ex) {
                    Logger.getLogger(GuiLoginUsuario_Old.class.getName()).log(Level.SEVERE, null, ex);
                }

            } else {
                this.usuario = (Usuario) tblUsuarios.getValueAt(tblUsuarios.getSelectedRow(), 0);
                usuario.setNome(txtNome.getText());
                usuario.setSenha(txtSenha.getText());
                try {
                    dadosLoginUsuario.alterar(this.usuario);
                    JOptionPane.showMessageDialog(rootPane, "Dados Atualizados.");
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null, ex.getMessage());
                }

            }

            preencherTabela();

        }

    }//GEN-LAST:event_btnGravarActionPerformed

    private void chbMostrarSenhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chbMostrarSenhaActionPerformed
        // TODO add your handling code here:
        preencherTabela();
    }//GEN-LAST:event_chbMostrarSenhaActionPerformed

    private void preencherTabela() {
        DefaultTableModel tbl = (DefaultTableModel) tblUsuarios.getModel();
        tblUsuarios.setRowSorter(new TableRowSorter(tbl));
        
        int qtdLinhas = tbl.getRowCount();

        for (int i = qtdLinhas - 1; i >= 0; i--) {
            tbl.removeRow(0);
        }

        List<Usuario> usuarios = new ArrayList();
        try {
            usuarios = dadosLoginUsuario.getList();
        } catch (Exception ex) {
            //JOptionPane.showMessageDialog(null, "Nenhum usuário encontrado. /n/n Erro: " + ex);
            //return;
        }
        
        if (chbMostrarSenha.isSelected()) {
            for (int i = 0; i < usuarios.size(); i++) {
                Usuario usu = (Usuario) usuarios.get(i);
                // Object linha[] = {usu, usu.getSenha(), usu.getTipo(), usu.getDataCriacao()};
                // tbl.addRow(linha);
            }
        } else {
            for (int i = 0; i < usuarios.size(); i++) {
                Usuario usu = (Usuario) usuarios.get(i);
                // Object linha[] = {usu, "*****", usu.getTipo(), usu.getDataCriacao()};
                // tbl.addRow(linha);
            }
        }
    
        
        this.alterando = false;
        btnAlterar.setSelected(false);
        btnAlterar.setText("Alterar");
        cboTipoUsuario.setSelectedIndex(0);
        txtNome.setText("");
        txtSenha.setText("");
        txtNome.requestFocus();
        tblUsuarios.setEnabled(true);
    }
    
    public boolean validaCampos() {
        if (!(txtNome.getText().length() > 0)){
            JOptionPane.showMessageDialog(null, "Informe o Nome de Usuário.");
            txtNome.requestFocus();
            return false;
        }
        if (!(txtSenha.getText().length() > 0)){
            JOptionPane.showMessageDialog(null, "Informe a Senha do Usuário.");
            txtSenha.requestFocus();
            return false;
        }
        return true;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton btnAlterar;
    private javax.swing.JButton btnGravar;
    private javax.swing.JButton btnRemover;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JComboBox cboTipoUsuario;
    private javax.swing.JCheckBox chbMostrarSenha;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblNome;
    private javax.swing.JLabel lblNome1;
    private javax.swing.JLabel lblSenha;
    private javax.swing.JTable tblUsuarios;
    private javax.swing.JTextField txtNome;
    private javax.swing.JPasswordField txtSenha;
    // End of variables declaration//GEN-END:variables
}
